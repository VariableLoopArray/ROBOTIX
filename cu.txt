Cas d’utilisations
1.	Aller chercher un objet. 
But: Diriger le robot à chercher un objet tellement qu’une balle, une boisson ou la télécommande à l’utilisateur.



Préconditions: 
-	Le robot doit être dans l’état d’être prêt.
-	L'objet ne dois pas être trop lourde. 
-	Savoir l’emplacement de l’objet cherché.
Acteur 1: L’utilisateur
Acteur 2: Le robot. 
Scénario principal:
1.	L’utilisateur va diriger le robot à l’objet cherché en lui donnant l’emplacement de l’objet ainsi que le nom de l’objet.
2.	Le robot va analyser son emplacement par rapport à l’objet.
3.	Puis, il va évaluer tous les obstacles entre lui et l’objet.
4.	Ensuite, il va calculer la route optimale pour chercher l’objet.
5.	Finalement, il revient à l’utilisateur avec l’objet.
6.	
Scénario alternatif:

Postconditions:
Le robot va revenir à l’état d’être prêt.

2.	Faire la somme d’un tableau de donnée numérique.
But: Faire la somme d’un tableau de nombres numérique.
Préconditions: 
-	Les valeurs dans le tableau doivent être séparées par une virgule. 
-	Les valeurs doivent être des nombres. Donc des Ints, doubles, longs ou floats.
-	Le tableau doit être enveloppé par `[]`.
Acteur 1: L’utilisateur. Il va rentrer un tableau de données.
Acteur 2: Le programme, il va vérifier la validité du tableau, puis faire la somme des données 





Scénario principal:
1.	L'utilisateur rentre un tableau de données.
2.	Le programme vérifie si le tableau contient bel et bien que des nombres.
3.	Si oui, le programme faire la somme puis l’imprime.
4.	Si non, le programme va imprimer un message d’erreur.
-	4.1 il va demander à l’utilisateur à re rentrer le tableau.
5.	

Scénario alternatif:
Postconditions:
Le programme sauvegarde le résultat comme référence pour le futur. (Seules les 10 dernières références seront sauvegardées. 
3.	Générer des nombres premiers
But: Générer tous les nombres premiers entre 1 et le nombre limite.
Précondition:
-	Le nombre limite doit être positif. 
Acteur 1: le user
Acteur 2: l’ordi
Scénario principal: 
1.	Entrer le nombre limite.
Scénario alternatif:

Postconditions:
Le programme revient à son état d’être prêt. 
4.	Jouer à roche papier ciseau 
But: L’ordinateur va jouer à roche papier ciseau avec l’user.
Précondition:
-	L'ordi doit être prêt
Acteur 1: le user
Acteur 2: l’ordi
Scénario principal:
1.	Rentrer ce qu’on veut jouer
Scénario alternatif:

Postconditions: L’ordi revient à son état prêt.



5.	Trier un tableau
But: Trier un tableau de nombre en ordre croissant.
Précondition:
-	L'ordi doit être prêt
-	Le tableau doit contenir des nombres
Acteur 1: le user
Acteur 2: l’ordi
Scénario principal:
1.	Rentrer le tableau.
Scénario alternatif:
Postconditions: L’ordi revient à son état prêt.

6.	Générer un tableau de nombres aléatoire
But: Générer un tableau de taille spécifié de nombre aléatoire à une limite spécifié.
Précondition:
-	L'ordi doit être prêt
-	La limite doit être un nombre
Acteur 1: le user
Acteur 2: l’ordi
Scénario principal:
1.	Rentrer la taille du tableau et la limite.
Scénario alternatif:
Postconditions: L’ordi revient à son état prêt.




i'm testing github


Qiyun commit test
